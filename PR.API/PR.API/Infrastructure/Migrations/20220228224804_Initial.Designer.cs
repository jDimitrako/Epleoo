// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PR.Infrastructure;

#nullable disable

namespace PR.API.Infrastructure.Migrations
{
    [DbContext(typeof(PrDbContext))]
    [Migration("20220228224804_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("friendshipseq", "pr.service")
                .IncrementsBy(10);

            modelBuilder.HasSequence("personseq", "pr.service")
                .IncrementsBy(10);

            modelBuilder.Entity("PR.Domain.AggregatesModel.FriendshipAggregate.FriendRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FriendshipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FriendshipId");

                    b.ToTable("FriendRequest");
                });

            modelBuilder.Entity("PR.Domain.AggregatesModel.FriendshipAggregate.Friendship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "friendshipseq", "pr.service");

                    b.Property<string>("ReceiverIdentityGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderIdentityGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("friendships", "pr.service");
                });

            modelBuilder.Entity("PR.Domain.AggregatesModel.PersonAggregate.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "personseq", "pr.service");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityGuid")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityGuid")
                        .IsUnique();

                    b.ToTable("persons", "pr.service");
                });

            modelBuilder.Entity("PR.Domain.AggregatesModel.FriendshipAggregate.FriendRequest", b =>
                {
                    b.HasOne("PR.Domain.AggregatesModel.FriendshipAggregate.Friendship", null)
                        .WithMany("FriendRequests")
                        .HasForeignKey("FriendshipId");
                });

            modelBuilder.Entity("PR.Domain.AggregatesModel.FriendshipAggregate.Friendship", b =>
                {
                    b.Navigation("FriendRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
